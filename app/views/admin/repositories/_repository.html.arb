job ||= nil
repository = code_location.repository

table class: 'index_table' do
  tr do
    td do
      a repository.class
      a link_to repository.id, admin_repository_path(repository)
    end
    td do
      "#{code_location.nice_url} [#{link_to 'Re-Fetch', refetch_admin_code_location_path(code_location)}]".html_safe
    end
    td do
      "Updates every #{time_ago_in_days_hours_minutes(Time.current - code_location.update_interval)}"
    end
    td do
      link_to 'Log', admin_code_location_slave_logs_path(code_location)
    end
  end
  code_sets.each_with_index do |code_set, index|
    tr class: "#{index.even? ? 'even' : 'odd'}" do
      td do
        a 'CodeSet'
        a link_to code_set.id, admin_code_set_path(code_set)
        a '(Best)' if code_location.best_code_set_id == code_set.id
        a '(Job)' if job && job.code_set_id == code_set.id
      end
      td do
        a link_to '[Fetch]', fetch_admin_code_set_path(code_set)
        a link_to '[Re-Import]', reimport_admin_code_set_path(code_set)
        a link_to '[Re-Sloc]', resloc_admin_code_set_path(code_set)
      end
      td do
        if code_set.updated_on
          "#{time_ago_in_days_hours_minutes(code_set.updated_on)} ago"
        else
          'never'
        end
      end
      td do
        "as of #{code_set.as_of.to_i}"
      end
    end

    code_set.sloc_sets.each do |sloc_set|
      tr class: "#{index.even? ? 'even' : 'odd'}" do
        td do
          a 'SlocSet'
          a link_to sloc_set.id, admin_sloc_set_path(sloc_set)
          a '(Best)' if code_set.best_sloc_set_id == sloc_set.id
          a '(Job)' if job && job.sloc_set_id == sloc_set.id
        end
        td
        td do
          if sloc_set.updated_on
            "#{time_ago_in_days_hours_minutes(sloc_set.updated_on)} ago"
          else
            'never'
          end
        end
        td do
          "as of #{sloc_set.as_of.to_i}"
        end
      end
    end

    code_set.clumps.each do |clump|
      tr class: "#{index.even? ? 'even' : 'odd'}" do
        td do
          a clump.class
          a clump.id
        end
        td do
          link_to clump.slave.hostname, admin_slafe_path(clump.slave.hostname)
        end
        td do
          if clump.fetched_at
            "#{time_ago_in_days_hours_minutes(clump.fetched_at)} ago"
          else
            'Unknown'
          end
        end
        td
      end
    end
  end
end
