- content_for(:html_title) { t('.title', name: @project.name) }
- page_context[:select_footer_nav] = nil
- has_permission = logged_in? && @project.edit_authorized?

.project_content_title
  %h2.pull-left
    = link_to t('settings'), settings_project_path(@project)
    = t('.code_locations')
  = project_analysis_timestamp(@project)
.clearfix

- if sidekiq_work_in_progress?
  .alert.alert-info.alert-block
    %h5.alert-heading.nomargin= t('.currently_importing')

- if flash[:show_first_enlistment_alert]
  .alert.alert-info.alert-block
    %h4.alert-heading.nomargin= t('.alert_info_heading', name: @project.name)
    %p= t('.alert_info_description')

- if @stale_jobs_report.any?
  .alert.alert-warning.alert-block
    %h4.alert-heading.nomargin= t('.alert_warn_heading')
    %p= t('.alert_warn_description1')
    = t('.alert_warn_description2')
    = link_to t('.help_forum'), 'https://community.synopsys.com/s/topic/0TO2H000000gHS1WAM/black-duck-open-hub-help'
    \.
    %p
    = t('.alert_warn_description3_html')

  - reportable_group_names = @stale_jobs_report.keys.map(&:to_s) & FailureGroup::REPORTABLE
  - if reportable_group_names.any?
    .alert.alert-info.alert-block
      %h5.alert-heading.nomargin= t('.failure.heading')
      %ul.padding_left_10
        - reportable_group_names.each do |failure_group_name|
          - key = "enlistments.index.failure.#{failure_group_name}"
          %li.font-1em= t(key) if I18n.exists?(key)

- if @project.enlistments.any?
  %table.table.table-striped
    %thead
      %tr{ id: 'dingus-row' }
        %td{ colspan: '7' }
          .margin_top_10.margin_bottom_10
            %form.form-inline
              .form-group.margin_right_10.padding_left_10
                - if @enlistments.respond_to?(:current_page) && !@enlistments.length.zero?
                  %label.paginate= "Showing page #{number_with_delimiter(@enlistments.current_page)} of #{number_with_delimiter(@enlistments.total_pages)}"
                - elsif @enlistments.size.zero?
                  %label.paginate= t('.count_status', current_count: @enlistments.length,
                    total_count: number_with_delimiter(0))
              .form-group.margin_right_10
                %label Search &nbsp;
                = text_field_tag :query, params[:query]

                %button.btn.btn-refresh{ type: 'Submit', style: 'height: 34px; border-top: 10px' }
                  %i.icon-refresh
              .form-group.margin_right_10
                %label
                  = check_box_tag(:dnf, '1', (params[:dnf] == '1' ? true : false), style: 'margin-top: 1px', onChange: 'submit()')
                  = label_tag(:dnf, 'Show unprocessable sources')

              .form-group.pull-right.padding_right_10
                #sort_by
                  %label= 'Sort by'
                  = select_tag :sort, options_for_select(SORT_OPTIONS['enlistments'][:options],
                    params[:sort] || SORT_OPTIONS['enlistments'][:default]),
                    class: 'chzn-select', onchange: 'this.form.submit()', style: 'width: 150px;'

      %tr
        %th= t('.repository_url')
        %th= t('.scm_type')
        %th= t('.update_status')
        %th= t('.ignored_files')
        %th= t('.allowed_files')
        %th= t('.actions')
    %tbody
      = render partial: 'enlistment', collection: @enlistments, locals: { has_permission: has_permission }
- else
  = render '/enlistments/no_enlistment'

= will_paginate @enlistments

- if @enlistments.empty? && params[:query].present?
  = render partial: 'shared/alert', locals: { message: t('.no_match') }

- unless @project.enlistments.empty?
  - if logged_in? && @project.edit_authorized?
    = link_to t('.new_code_location'), new_project_enlistment_path(@project), class: 'btn btn-primary'
  - else
    = icon_button(new_project_enlistment_url(@project), text: t('.new_code_location'), class: 'btn btn-primary')

= render partial: 'about_code_locations'
